{
  "formatVersion": 1,
  "database": {
    "version": 4,
    "identityHash": "30cdeedc96259da2d0e019a757fea6f9",
    "entities": [
      {
        "tableName": "cache_log",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `request` TEXT NOT NULL, `cache_item_id` INTEGER NOT NULL, `timestamp` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "request",
            "columnName": "request",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "cacheItemId",
            "columnName": "cache_item_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_cache_log_cache_item_id",
            "unique": false,
            "columnNames": [
              "cache_item_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_cache_log_cache_item_id` ON `${TABLE_NAME}` (`cache_item_id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "relation",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`anilist` INTEGER NOT NULL, `anidb` INTEGER, `kitsu` INTEGER, `mal` INTEGER, PRIMARY KEY(`anilist`))",
        "fields": [
          {
            "fieldPath": "anilist",
            "columnName": "anilist",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "aniDb",
            "columnName": "anidb",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "kitsu",
            "columnName": "kitsu",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "mal",
            "columnName": "mal",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "anilist"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "auth",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` INTEGER NOT NULL, `expires_on` INTEGER NOT NULL, `token_type` TEXT NOT NULL, `access_token` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expiresOn",
            "columnName": "expires_on",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tokenType",
            "columnName": "token_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accessToken",
            "columnName": "access_token",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_auth_access_token",
            "unique": true,
            "columnNames": [
              "access_token"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_auth_access_token` ON `${TABLE_NAME}` (`access_token`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "tag",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`name` TEXT NOT NULL, `description` TEXT, `category` TEXT, `is_general_spoiler` INTEGER NOT NULL, `is_adult` INTEGER NOT NULL, `id` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isGeneralSpoiler",
            "columnName": "is_general_spoiler",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isAdult",
            "columnName": "is_adult",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_tag_name",
            "unique": true,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_tag_name` ON `${TABLE_NAME}` (`name`)"
          },
          {
            "name": "index_tag_category",
            "unique": false,
            "columnNames": [
              "category"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tag_category` ON `${TABLE_NAME}` (`category`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "tag_connection",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`rank` INTEGER NOT NULL, `is_media_spoiler` INTEGER NOT NULL, `media_id` INTEGER NOT NULL, `tag_id` INTEGER NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, FOREIGN KEY(`tag_id`) REFERENCES `tag`(`id`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`media_id`) REFERENCES `media`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "rank",
            "columnName": "rank",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isMediaSpoiler",
            "columnName": "is_media_spoiler",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mediaId",
            "columnName": "media_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tagId",
            "columnName": "tag_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_tag_connection_tag_id_media_id",
            "unique": true,
            "columnNames": [
              "tag_id",
              "media_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_tag_connection_tag_id_media_id` ON `${TABLE_NAME}` (`tag_id`, `media_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "tag",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "tag_id"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "media",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "media_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "genre",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `genre` TEXT NOT NULL, `emoji` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "genre",
            "columnName": "genre",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "emoji",
            "columnName": "emoji",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_genre_genre_emoji",
            "unique": true,
            "columnNames": [
              "genre",
              "emoji"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_genre_genre_emoji` ON `${TABLE_NAME}` (`genre`, `emoji`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "genre_connection",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`media_id` INTEGER NOT NULL, `genre_id` INTEGER NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, FOREIGN KEY(`media_id`) REFERENCES `media`(`id`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`genre_id`) REFERENCES `genre`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "mediaId",
            "columnName": "media_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "genreId",
            "columnName": "genre_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_genre_connection_genre_id_media_id",
            "unique": true,
            "columnNames": [
              "genre_id",
              "media_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_genre_connection_genre_id_media_id` ON `${TABLE_NAME}` (`genre_id`, `media_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "media",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "media_id"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "genre",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "genre_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "media",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`next_airing_id` INTEGER, `average_score` INTEGER, `chapters` INTEGER, `country_of_origin` TEXT, `description` TEXT, `duration` INTEGER, `end_date` TEXT, `episodes` INTEGER, `favourites` INTEGER NOT NULL, `media_format` TEXT, `hash_tag` TEXT, `is_adult` INTEGER, `is_favourite` INTEGER NOT NULL, `is_favourite_blocked` INTEGER NOT NULL, `is_licensed` INTEGER, `is_recommendation_blocked` INTEGER NOT NULL, `is_locked` INTEGER, `mean_score` INTEGER, `popularity` INTEGER, `season` TEXT, `site_url` TEXT, `source` TEXT, `start_date` TEXT, `status` TEXT, `synonyms` TEXT NOT NULL, `trending` INTEGER, `media_type` TEXT NOT NULL, `updated_at` INTEGER, `volumes` INTEGER, `mal_id` INTEGER, `id` INTEGER NOT NULL, `cover_color` TEXT, `cover_extra_large` TEXT, `cover_large` TEXT, `cover_medium` TEXT, `cover_banner` TEXT, `title_romaji` TEXT, `title_english` TEXT, `title_original` TEXT, `title_user_preferred` TEXT, `trailer_id` TEXT, `trailer_site` TEXT, `trailer_thumbnail` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "nextAiringId",
            "columnName": "next_airing_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "averageScore",
            "columnName": "average_score",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "chapters",
            "columnName": "chapters",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "countryOfOrigin",
            "columnName": "country_of_origin",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "endDate",
            "columnName": "end_date",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "episodes",
            "columnName": "episodes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "favourites",
            "columnName": "favourites",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "format",
            "columnName": "media_format",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hashTag",
            "columnName": "hash_tag",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isAdult",
            "columnName": "is_adult",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isFavourite",
            "columnName": "is_favourite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavouriteBlocked",
            "columnName": "is_favourite_blocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isLicensed",
            "columnName": "is_licensed",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isRecommendationBlocked",
            "columnName": "is_recommendation_blocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isLocked",
            "columnName": "is_locked",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "meanScore",
            "columnName": "mean_score",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "popularity",
            "columnName": "popularity",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "season",
            "columnName": "season",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "siteUrl",
            "columnName": "site_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "source",
            "columnName": "source",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "startDate",
            "columnName": "start_date",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "synonyms",
            "columnName": "synonyms",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "trending",
            "columnName": "trending",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "media_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "volumes",
            "columnName": "volumes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "malId",
            "columnName": "mal_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "coverImage.color",
            "columnName": "cover_color",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coverImage.extraLarge",
            "columnName": "cover_extra_large",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coverImage.large",
            "columnName": "cover_large",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coverImage.medium",
            "columnName": "cover_medium",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coverImage.banner",
            "columnName": "cover_banner",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title.romaji",
            "columnName": "title_romaji",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title.english",
            "columnName": "title_english",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title.original",
            "columnName": "title_original",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title.userPreferred",
            "columnName": "title_user_preferred",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "trailer.id",
            "columnName": "trailer_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "trailer.site",
            "columnName": "trailer_site",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "trailer.thumbnail",
            "columnName": "trailer_thumbnail",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_media_mal_id",
            "unique": true,
            "columnNames": [
              "mal_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_media_mal_id` ON `${TABLE_NAME}` (`mal_id`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "media",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_media_fts_BEFORE_UPDATE BEFORE UPDATE ON `media` BEGIN DELETE FROM `media_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_media_fts_BEFORE_DELETE BEFORE DELETE ON `media` BEGIN DELETE FROM `media_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_media_fts_AFTER_UPDATE AFTER UPDATE ON `media` BEGIN INSERT INTO `media_fts`(`docid`, `title_romaji`, `title_english`, `title_original`) VALUES (NEW.`rowid`, NEW.`title_romaji`, NEW.`title_english`, NEW.`title_original`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_media_fts_AFTER_INSERT AFTER INSERT ON `media` BEGIN INSERT INTO `media_fts`(`docid`, `title_romaji`, `title_english`, `title_original`) VALUES (NEW.`rowid`, NEW.`title_romaji`, NEW.`title_english`, NEW.`title_original`); END"
        ],
        "tableName": "media_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`title_romaji` TEXT NOT NULL, `title_english` TEXT NOT NULL, `title_original` TEXT NOT NULL, content=`media`)",
        "fields": [
          {
            "fieldPath": "romaji",
            "columnName": "title_romaji",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "english",
            "columnName": "title_english",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "original",
            "columnName": "title_original",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "airing_schedule",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`airing_at` INTEGER NOT NULL, `episode` INTEGER NOT NULL, `media_id` INTEGER NOT NULL, `time_until_airing` INTEGER NOT NULL, `id` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`media_id`) REFERENCES `media`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "airingAt",
            "columnName": "airing_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "episode",
            "columnName": "episode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mediaId",
            "columnName": "media_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timeUntilAiring",
            "columnName": "time_until_airing",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_airing_schedule_media_id",
            "unique": false,
            "columnNames": [
              "media_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_airing_schedule_media_id` ON `${TABLE_NAME}` (`media_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "media",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "media_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "user",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`unread_notifications` INTEGER, `updated_at` INTEGER, `created_at` INTEGER, `id` INTEGER NOT NULL, `user_name` TEXT NOT NULL, `user_bio` TEXT, `user_site_url` TEXT NOT NULL, `user_donator_tier` INTEGER, `user_donator_badge` TEXT, `user_is_following` INTEGER, `user_is_follower` INTEGER, `user_is_blocked` INTEGER, `cover_large` TEXT, `cover_medium` TEXT, `cover_banner` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "unreadNotification",
            "columnName": "unread_notifications",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "about.name",
            "columnName": "user_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "about.bio",
            "columnName": "user_bio",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "about.siteUrl",
            "columnName": "user_site_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "about.donatorTier",
            "columnName": "user_donator_tier",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "about.donatorBadge",
            "columnName": "user_donator_badge",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status.isFollowing",
            "columnName": "user_is_following",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "status.isFollower",
            "columnName": "user_is_follower",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "status.isBlocked",
            "columnName": "user_is_blocked",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "coverImage.large",
            "columnName": "cover_large",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coverImage.medium",
            "columnName": "cover_medium",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coverImage.banner",
            "columnName": "cover_banner",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_user_user_name",
            "unique": true,
            "columnNames": [
              "user_name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_user_user_name` ON `${TABLE_NAME}` (`user_name`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "user",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_user_fts_BEFORE_UPDATE BEFORE UPDATE ON `user` BEGIN DELETE FROM `user_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_user_fts_BEFORE_DELETE BEFORE DELETE ON `user` BEGIN DELETE FROM `user_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_user_fts_AFTER_UPDATE AFTER UPDATE ON `user` BEGIN INSERT INTO `user_fts`(`docid`, `user_name`) VALUES (NEW.`rowid`, NEW.`user_name`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_user_fts_AFTER_INSERT AFTER INSERT ON `user` BEGIN INSERT INTO `user_fts`(`docid`, `user_name`) VALUES (NEW.`rowid`, NEW.`user_name`); END"
        ],
        "tableName": "user_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`user_name` TEXT NOT NULL, content=`user`)",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "user_name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "user_general_option",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` INTEGER NOT NULL, `airing_notifications` INTEGER NOT NULL, `display_adult_content` INTEGER NOT NULL, `notification_option` TEXT NOT NULL, `title_language` TEXT NOT NULL, `profile_color` TEXT, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `user`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "airingNotifications",
            "columnName": "airing_notifications",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "displayAdultContent",
            "columnName": "display_adult_content",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationOption",
            "columnName": "notification_option",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "titleLanguage",
            "columnName": "title_language",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "profileColor",
            "columnName": "profile_color",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_user_general_option_user_id",
            "unique": true,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_user_general_option_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "user_media_option",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` INTEGER NOT NULL, `score_format` TEXT NOT NULL, `list_row_order` TEXT, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `anime_custom_lists` TEXT NOT NULL, `anime_section_order` TEXT NOT NULL, `anime_advanced_scoring` TEXT NOT NULL, `anime_advanced_scoring_enabled` INTEGER NOT NULL, `anime_split_completed_section_by_format` INTEGER NOT NULL, `manga_custom_lists` TEXT NOT NULL, `manga_section_order` TEXT NOT NULL, `manga_advanced_scoring` TEXT NOT NULL, `manga_advanced_scoring_enabled` INTEGER NOT NULL, `manga_split_completed_section_by_format` INTEGER NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `user`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scoreFormat",
            "columnName": "score_format",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "rowOrder",
            "columnName": "list_row_order",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "anime.customLists",
            "columnName": "anime_custom_lists",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "anime.sectionOrder",
            "columnName": "anime_section_order",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "anime.advancedScoring",
            "columnName": "anime_advanced_scoring",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "anime.advancedScoringEnabled",
            "columnName": "anime_advanced_scoring_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "anime.splitCompletedSectionByFormat",
            "columnName": "anime_split_completed_section_by_format",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "manga.customLists",
            "columnName": "manga_custom_lists",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "manga.sectionOrder",
            "columnName": "manga_section_order",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "manga.advancedScoring",
            "columnName": "manga_advanced_scoring",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "manga.advancedScoringEnabled",
            "columnName": "manga_advanced_scoring_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "manga.splitCompletedSectionByFormat",
            "columnName": "manga_split_completed_section_by_format",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_user_media_option_user_id",
            "unique": true,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_user_media_option_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "user_statistic",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` INTEGER NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `statistic_anime` TEXT, `statistic_manga` TEXT, FOREIGN KEY(`user_id`) REFERENCES `user`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statistic.anime",
            "columnName": "statistic_anime",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "statistic.manga",
            "columnName": "statistic_manga",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_user_statistic_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_user_statistic_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "media_list",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`media_type` TEXT NOT NULL, `completed_at` TEXT, `created_at` INTEGER, `hidden_from_status` INTEGER NOT NULL, `media_id` INTEGER NOT NULL, `notes` TEXT, `priority` INTEGER, `hidden` INTEGER NOT NULL, `progress` INTEGER NOT NULL, `progress_volumes` INTEGER NOT NULL, `repeat_count` INTEGER NOT NULL, `score` REAL NOT NULL, `started_at` TEXT, `list_status` TEXT NOT NULL, `updated_at` INTEGER, `user_id` INTEGER NOT NULL, `user_name` TEXT NOT NULL, `id` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "mediaType",
            "columnName": "media_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "completedAt",
            "columnName": "completed_at",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "hiddenFromStatus",
            "columnName": "hidden_from_status",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mediaId",
            "columnName": "media_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "hidden",
            "columnName": "hidden",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "progress",
            "columnName": "progress",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "progressVolumes",
            "columnName": "progress_volumes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "repeatCount",
            "columnName": "repeat_count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "startedAt",
            "columnName": "started_at",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "list_status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userName",
            "columnName": "user_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "news",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `title` TEXT NOT NULL, `image` TEXT, `author` TEXT NOT NULL, `sub_title` TEXT NOT NULL, `original_link` TEXT NOT NULL, `description` TEXT, `content` TEXT NOT NULL, `published_on` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "author",
            "columnName": "author",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "subTitle",
            "columnName": "sub_title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "originalLink",
            "columnName": "original_link",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "publishedOn",
            "columnName": "published_on",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "news",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_news_fts_BEFORE_UPDATE BEFORE UPDATE ON `news` BEGIN DELETE FROM `news_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_news_fts_BEFORE_DELETE BEFORE DELETE ON `news` BEGIN DELETE FROM `news_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_news_fts_AFTER_UPDATE AFTER UPDATE ON `news` BEGIN INSERT INTO `news_fts`(`docid`, `title`, `sub_title`, `description`) VALUES (NEW.`rowid`, NEW.`title`, NEW.`sub_title`, NEW.`description`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_news_fts_AFTER_INSERT AFTER INSERT ON `news` BEGIN INSERT INTO `news_fts`(`docid`, `title`, `sub_title`, `description`) VALUES (NEW.`rowid`, NEW.`title`, NEW.`sub_title`, NEW.`description`); END"
        ],
        "tableName": "news_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`title` TEXT NOT NULL, `sub_title` TEXT NOT NULL, `description` TEXT, content=`news`)",
        "fields": [
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "subTitle",
            "columnName": "sub_title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "episode",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`title` TEXT NOT NULL, `guid` TEXT NOT NULL, `media_id` INTEGER NOT NULL, `description` TEXT, `sub_titles` TEXT NOT NULL, `id` INTEGER NOT NULL, `series_title` TEXT NOT NULL, `series_publisher` TEXT, `series_season` TEXT, `series_keywords` TEXT NOT NULL, `series_rating` TEXT, `thumbnail_large` TEXT, `thumbnail_medium` TEXT, `available_free_time` INTEGER NOT NULL, `available_premium_time` INTEGER NOT NULL, `info_episode_duration` TEXT NOT NULL, `info_episode_title` TEXT, `info_episode_number` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "guid",
            "columnName": "guid",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mediaId",
            "columnName": "media_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subtitles",
            "columnName": "sub_titles",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "series.seriesTitle",
            "columnName": "series_title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "series.seriesPublisher",
            "columnName": "series_publisher",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "series.seriesSeason",
            "columnName": "series_season",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "series.keywords",
            "columnName": "series_keywords",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "series.rating",
            "columnName": "series_rating",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coverImage.large",
            "columnName": "thumbnail_large",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coverImage.medium",
            "columnName": "thumbnail_medium",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "availability.freeTime",
            "columnName": "available_free_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "availability.premiumTime",
            "columnName": "available_premium_time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "about.episodeDuration",
            "columnName": "info_episode_duration",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "about.episodeTitle",
            "columnName": "info_episode_title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "about.episodeNumber",
            "columnName": "info_episode_number",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "episode",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_episode_fts_BEFORE_UPDATE BEFORE UPDATE ON `episode` BEGIN DELETE FROM `episode_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_episode_fts_BEFORE_DELETE BEFORE DELETE ON `episode` BEGIN DELETE FROM `episode_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_episode_fts_AFTER_UPDATE AFTER UPDATE ON `episode` BEGIN INSERT INTO `episode_fts`(`docid`, `title`, `description`, `series_title`) VALUES (NEW.`rowid`, NEW.`title`, NEW.`description`, NEW.`series_title`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_episode_fts_AFTER_INSERT AFTER INSERT ON `episode` BEGIN INSERT INTO `episode_fts`(`docid`, `title`, `description`, `series_title`) VALUES (NEW.`rowid`, NEW.`title`, NEW.`description`, NEW.`series_title`); END"
        ],
        "tableName": "episode_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`title` TEXT NOT NULL, `description` TEXT, `series_title` TEXT NOT NULL, content=`episode`)",
        "fields": [
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "seriesTitle",
            "columnName": "series_title",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "character",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`age` INTEGER, `date_of_birth` TEXT, `gender` TEXT, `blood_type` TEXT, `description` TEXT, `favourites` INTEGER NOT NULL, `isFavourite` INTEGER NOT NULL, `isFavouriteBlocked` INTEGER NOT NULL, `site_url` TEXT NOT NULL, `id` INTEGER NOT NULL, `image_large` TEXT, `image_medium` TEXT, `name_alternative` TEXT, `name_alternative_spoiler` TEXT, `name_first` TEXT, `name_full` TEXT, `name_last` TEXT, `name_middle` TEXT, `name_original` TEXT, `name_user_preferred` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "age",
            "columnName": "age",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "dateOfBirth",
            "columnName": "date_of_birth",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gender",
            "columnName": "gender",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "bloodType",
            "columnName": "blood_type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "favourites",
            "columnName": "favourites",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavourite",
            "columnName": "isFavourite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavouriteBlocked",
            "columnName": "isFavouriteBlocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "siteUrl",
            "columnName": "site_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "image.large",
            "columnName": "image_large",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image.medium",
            "columnName": "image_medium",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.alternatives",
            "columnName": "name_alternative",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.alternativeSpoiler",
            "columnName": "name_alternative_spoiler",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.first",
            "columnName": "name_first",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.full",
            "columnName": "name_full",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.last",
            "columnName": "name_last",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.middle",
            "columnName": "name_middle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.original",
            "columnName": "name_original",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.userPreferred",
            "columnName": "name_user_preferred",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "character",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_character_fts_BEFORE_UPDATE BEFORE UPDATE ON `character` BEGIN DELETE FROM `character_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_character_fts_BEFORE_DELETE BEFORE DELETE ON `character` BEGIN DELETE FROM `character_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_character_fts_AFTER_UPDATE AFTER UPDATE ON `character` BEGIN INSERT INTO `character_fts`(`docid`, `name_alternative`, `name_first`, `name_full`, `name_last`, `name_original`) VALUES (NEW.`rowid`, NEW.`name_alternative`, NEW.`name_first`, NEW.`name_full`, NEW.`name_last`, NEW.`name_original`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_character_fts_AFTER_INSERT AFTER INSERT ON `character` BEGIN INSERT INTO `character_fts`(`docid`, `name_alternative`, `name_first`, `name_full`, `name_last`, `name_original`) VALUES (NEW.`rowid`, NEW.`name_alternative`, NEW.`name_first`, NEW.`name_full`, NEW.`name_last`, NEW.`name_original`); END"
        ],
        "tableName": "character_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`name_alternative` TEXT, `name_first` TEXT, `name_full` TEXT, `name_last` TEXT, `name_original` TEXT, content=`character`)",
        "fields": [
          {
            "fieldPath": "alternatives",
            "columnName": "name_alternative",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "first",
            "columnName": "name_first",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "full",
            "columnName": "name_full",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "last",
            "columnName": "name_last",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "original",
            "columnName": "name_original",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "studio",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`favourites` INTEGER NOT NULL, `is_animation_studio` INTEGER NOT NULL, `is_favourite` INTEGER NOT NULL, `is_favourite_blocked` INTEGER NOT NULL, `name` TEXT NOT NULL, `site_url` TEXT NOT NULL, `id` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "favourites",
            "columnName": "favourites",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isAnimationStudio",
            "columnName": "is_animation_studio",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavourite",
            "columnName": "is_favourite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavouriteBlocked",
            "columnName": "is_favourite_blocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "siteUrl",
            "columnName": "site_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "studio",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_studio_fts_BEFORE_UPDATE BEFORE UPDATE ON `studio` BEGIN DELETE FROM `studio_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_studio_fts_BEFORE_DELETE BEFORE DELETE ON `studio` BEGIN DELETE FROM `studio_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_studio_fts_AFTER_UPDATE AFTER UPDATE ON `studio` BEGIN INSERT INTO `studio_fts`(`docid`, `name`) VALUES (NEW.`rowid`, NEW.`name`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_studio_fts_AFTER_INSERT AFTER INSERT ON `studio` BEGIN INSERT INTO `studio_fts`(`docid`, `name`) VALUES (NEW.`rowid`, NEW.`name`); END"
        ],
        "tableName": "studio_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`name` TEXT NOT NULL, content=`studio`)",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "staff",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`description` TEXT, `favourites` INTEGER NOT NULL, `is_favourite` INTEGER NOT NULL, `language` TEXT, `site_url` TEXT NOT NULL, `updated_at` INTEGER, `id` INTEGER NOT NULL, `attribute_age` INTEGER, `attribute_date_of_birth` TEXT, `attribute_date_of_death` TEXT, `attribute_gender` TEXT, `attribute_blood_type` TEXT, `attribute_home_town` TEXT, `attribute_primary_occupations` TEXT, `attribute_year_active_start` INTEGER, `attribute_year_active_end` INTEGER, `image_large` TEXT, `image_medium` TEXT, `name_alternative` TEXT, `name_first` TEXT, `name_full` TEXT, `name_last` TEXT, `name_original` TEXT, `name_user_preferred` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "favourites",
            "columnName": "favourites",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavourite",
            "columnName": "is_favourite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "siteUrl",
            "columnName": "site_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attribute.age",
            "columnName": "attribute_age",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attribute.dateOfBirth",
            "columnName": "attribute_date_of_birth",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attribute.dateOfDeath",
            "columnName": "attribute_date_of_death",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attribute.gender",
            "columnName": "attribute_gender",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attribute.bloodType",
            "columnName": "attribute_blood_type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attribute.homeTown",
            "columnName": "attribute_home_town",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attribute.primaryOccupations",
            "columnName": "attribute_primary_occupations",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attribute.yearActiveStart",
            "columnName": "attribute_year_active_start",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attribute.yearActiveEnd",
            "columnName": "attribute_year_active_end",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "image.large",
            "columnName": "image_large",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image.medium",
            "columnName": "image_medium",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.alternatives",
            "columnName": "name_alternative",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.first",
            "columnName": "name_first",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.full",
            "columnName": "name_full",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.last",
            "columnName": "name_last",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.original",
            "columnName": "name_original",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name.userPreferred",
            "columnName": "name_user_preferred",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "staff",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_staff_fts_BEFORE_UPDATE BEFORE UPDATE ON `staff` BEGIN DELETE FROM `staff_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_staff_fts_BEFORE_DELETE BEFORE DELETE ON `staff` BEGIN DELETE FROM `staff_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_staff_fts_AFTER_UPDATE AFTER UPDATE ON `staff` BEGIN INSERT INTO `staff_fts`(`docid`, `name_alternative`, `name_first`, `name_full`, `name_last`, `name_original`) VALUES (NEW.`rowid`, NEW.`name_alternative`, NEW.`name_first`, NEW.`name_full`, NEW.`name_last`, NEW.`name_original`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_staff_fts_AFTER_INSERT AFTER INSERT ON `staff` BEGIN INSERT INTO `staff_fts`(`docid`, `name_alternative`, `name_first`, `name_full`, `name_last`, `name_original`) VALUES (NEW.`rowid`, NEW.`name_alternative`, NEW.`name_first`, NEW.`name_full`, NEW.`name_last`, NEW.`name_original`); END"
        ],
        "tableName": "staff_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`name_alternative` TEXT, `name_first` TEXT, `name_full` TEXT, `name_last` TEXT, `name_original` TEXT, content=`staff`)",
        "fields": [
          {
            "fieldPath": "alternatives",
            "columnName": "name_alternative",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "first",
            "columnName": "name_first",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "full",
            "columnName": "name_full",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "last",
            "columnName": "name_last",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "original",
            "columnName": "name_original",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "link",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`media_id` INTEGER NOT NULL, `site` TEXT NOT NULL, `url` TEXT NOT NULL, `id` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`media_id`) REFERENCES `media`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "mediaId",
            "columnName": "media_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "site",
            "columnName": "site",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_link_media_id",
            "unique": false,
            "columnNames": [
              "media_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_link_media_id` ON `${TABLE_NAME}` (`media_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "media",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "media_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "rank",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`media_id` INTEGER NOT NULL, `all_time` INTEGER, `context` TEXT NOT NULL, `format` TEXT NOT NULL, `rank` INTEGER NOT NULL, `season` TEXT, `type` TEXT NOT NULL, `year` INTEGER, `id` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`media_id`) REFERENCES `media`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "mediaId",
            "columnName": "media_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "allTime",
            "columnName": "all_time",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "context",
            "columnName": "context",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "format",
            "columnName": "format",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "rank",
            "columnName": "rank",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "season",
            "columnName": "season",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "year",
            "columnName": "year",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_rank_media_id",
            "unique": false,
            "columnNames": [
              "media_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rank_media_id` ON `${TABLE_NAME}` (`media_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "media",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "media_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "jikan",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`info` TEXT, `volumes` INTEGER, `chapters` INTEGER, `source` TEXT, `rating` TEXT, `episodes` INTEGER, `duration` TEXT, `premiered` TEXT, `broadcast` TEXT, `trailer_url` TEXT, `opening_themes` TEXT NOT NULL, `ending_themes` TEXT NOT NULL, `url` TEXT, `image_url` TEXT, `type` TEXT, `releasing` INTEGER, `synopsis` TEXT, `background` TEXT, `id` INTEGER NOT NULL, `title_japanese` TEXT, `title_english` TEXT, `title_preferred` TEXT, `title_synonyms` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "info",
            "columnName": "info",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "volumes",
            "columnName": "volumes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "chapters",
            "columnName": "chapters",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "source",
            "columnName": "source",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "rating",
            "columnName": "rating",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "episodes",
            "columnName": "episodes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "premiered",
            "columnName": "premiered",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "broadcast",
            "columnName": "broadcast",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "trailerUrl",
            "columnName": "trailer_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "openingThemes",
            "columnName": "opening_themes",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "endingThemes",
            "columnName": "ending_themes",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "image_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "releasing",
            "columnName": "releasing",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "synopsis",
            "columnName": "synopsis",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "background",
            "columnName": "background",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title.japanese",
            "columnName": "title_japanese",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title.english",
            "columnName": "title_english",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title.preferred",
            "columnName": "title_preferred",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title.synonyms",
            "columnName": "title_synonyms",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "jikan_studio",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`jikan_id` INTEGER NOT NULL, `type` TEXT, `name` TEXT, `id` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`jikan_id`) REFERENCES `jikan`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "jikanId",
            "columnName": "jikan_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_jikan_studio_jikan_id",
            "unique": false,
            "columnNames": [
              "jikan_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_jikan_studio_jikan_id` ON `${TABLE_NAME}` (`jikan_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "jikan",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "jikan_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "jikan_licensor",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`jikan_id` INTEGER NOT NULL, `type` TEXT, `name` TEXT, `id` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`jikan_id`) REFERENCES `jikan`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "jikanId",
            "columnName": "jikan_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_jikan_licensor_jikan_id",
            "unique": false,
            "columnNames": [
              "jikan_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_jikan_licensor_jikan_id` ON `${TABLE_NAME}` (`jikan_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "jikan",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "jikan_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "jikan_producer",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`jikan_id` INTEGER NOT NULL, `type` TEXT, `name` TEXT, `id` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`jikan_id`) REFERENCES `jikan`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "jikanId",
            "columnName": "jikan_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_jikan_producer_jikan_id",
            "unique": false,
            "columnNames": [
              "jikan_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_jikan_producer_jikan_id` ON `${TABLE_NAME}` (`jikan_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "jikan",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "jikan_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "jikan_author",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`jikan_id` INTEGER NOT NULL, `type` TEXT, `name` TEXT, `id` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`jikan_id`) REFERENCES `jikan`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "jikanId",
            "columnName": "jikan_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_jikan_author_jikan_id",
            "unique": false,
            "columnNames": [
              "jikan_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_jikan_author_jikan_id` ON `${TABLE_NAME}` (`jikan_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "jikan",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "jikan_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "custom_list",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`enabled` INTEGER NOT NULL, `list_name` TEXT NOT NULL, `media_list_id` INTEGER NOT NULL, `user_id` INTEGER NOT NULL, `user_name` TEXT NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, FOREIGN KEY(`media_list_id`) REFERENCES `media_list`(`id`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`user_id`) REFERENCES `user`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "enabled",
            "columnName": "enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "listName",
            "columnName": "list_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mediaListId",
            "columnName": "media_list_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userName",
            "columnName": "user_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_custom_list_media_list_id_list_name_user_id_user_name",
            "unique": true,
            "columnNames": [
              "media_list_id",
              "list_name",
              "user_id",
              "user_name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_custom_list_media_list_id_list_name_user_id_user_name` ON `${TABLE_NAME}` (`media_list_id`, `list_name`, `user_id`, `user_name`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "media_list",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "media_list_id"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "custom_score",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`score` REAL NOT NULL, `score_name` TEXT NOT NULL, `media_list_id` INTEGER NOT NULL, `user_id` INTEGER NOT NULL, `user_name` TEXT NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, FOREIGN KEY(`media_list_id`) REFERENCES `media_list`(`id`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`user_id`) REFERENCES `user`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "scoreName",
            "columnName": "score_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mediaListId",
            "columnName": "media_list_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userName",
            "columnName": "user_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_custom_score_media_list_id_score_name_user_id_user_name",
            "unique": true,
            "columnNames": [
              "media_list_id",
              "score_name",
              "user_id",
              "user_name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_custom_score_media_list_id_score_name_user_id_user_name` ON `${TABLE_NAME}` (`media_list_id`, `score_name`, `user_id`, `user_name`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "media_list",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "media_list_id"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "user_previous_name",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`user_id` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `name` TEXT NOT NULL, `updated_at` INTEGER NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `user`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_user_previous_name_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_user_previous_name_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "review",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`body` TEXT NOT NULL, `created_at` INTEGER NOT NULL, `media_id` INTEGER NOT NULL, `is_private` INTEGER NOT NULL, `rating` INTEGER NOT NULL, `rating_amount` INTEGER NOT NULL, `score` INTEGER NOT NULL, `site_url` TEXT NOT NULL, `summary` TEXT NOT NULL, `updated_at` INTEGER NOT NULL, `user_id` INTEGER NOT NULL, `user_rating` TEXT NOT NULL, `id` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`media_id`) REFERENCES `media`(`id`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`user_id`) REFERENCES `user`(`id`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "body",
            "columnName": "body",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mediaId",
            "columnName": "media_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPrivate",
            "columnName": "is_private",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rating",
            "columnName": "rating",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ratingAmount",
            "columnName": "rating_amount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "siteUrl",
            "columnName": "site_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "summary",
            "columnName": "summary",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userRating",
            "columnName": "user_rating",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_review_media_id_user_id",
            "unique": false,
            "columnNames": [
              "media_id",
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_review_media_id_user_id` ON `${TABLE_NAME}` (`media_id`, `user_id`)"
          },
          {
            "name": "index_review_user_id",
            "unique": false,
            "columnNames": [
              "user_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_review_user_id` ON `${TABLE_NAME}` (`user_id`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "media",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "media_id"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "user",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "views": [
      {
        "viewName": "media_list_count",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS select count(media_list.id) as list_count, media_list.media_type, media_list.list_status, media_list.user_id\n        from media_list\n        group by media_list.user_id, media_list.media_type, media_list.list_status"
      },
      {
        "viewName": "custom_list_count",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS select count(custom_list.id) as list_count, media_list.media_type, custom_list.user_id, custom_list.list_name\n        from custom_list\n        inner join media_list on media_list.id = custom_list.media_list_id\n        where custom_list.enabled = 1\n        group by custom_list.user_id, media_list.media_type, custom_list.list_name"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '30cdeedc96259da2d0e019a757fea6f9')"
    ]
  }
}